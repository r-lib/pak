% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repo.R
\name{repo_auth}
\alias{repo_auth}
\title{Authenticated repositories}
\usage{
repo_auth(
  r_version = getRversion(),
  bioc = NULL,
  cran_mirror = NULL,
  check_credentials = TRUE
)
}
\arguments{
\item{r_version}{R version to use to determine the correct Bioconductor
version, if \code{bioc = TRUE}.}

\item{bioc}{Whether to automatically add the Bioconductor repositories
to the result.}

\item{cran_mirror}{CRAN mirror to use. Leave it at \code{NULL} to use the
mirror in \code{getOption("repos")} or an automatically selected one.}

\item{check_credentials}{Whether to check that credentials are
available for authenticated repositories.}
}
\value{
Data frame with columns:
\itemize{
\item all columns from the output of \code{\link[=repo_get]{repo_get()}},
\item \code{auth_domains}: authentication domains. pak tries to find the
credentials for these domains, until the search is successful or all
domains fail.
\item \code{auth_domain}: if the credential lookup is successful, then this is
the authentication domain that was used to get the credentials.
\item \code{auth_source}: where the credentials were found. E.g.
\verb{keyring:<backend>} means it was in the default macos keyring.
\item \code{auth_error}: for failed credential searches this is the description
of why the search failed. E.g. maybe the keyring package is not
installed, or pak found no credentials for any of the
authentication domains.
}
}
\description{
pak supports HTTP basic authentication when interacting with
CRAN-like repositories. To use authentication, include a username
in the repo URL:

\if{html}{\out{<div class="sourceCode">}}\preformatted{https://<username>@<repo-host>/<repo-path>
}\if{html}{\out{</div>}}
}
\details{
pak will look up password for this url and username from the
the user's \code{.netrc} file and from the system credential store using
the keyring package. pak currently supports the following keyring
backends:
\itemize{
\item Windows credential store,
\item macOS Keychain,
\item Linux Secret Service via libsecret, if built with libsecret support,
\item environment variables.
}

For the URL above it tries the following keyring
keys, in this order:

\if{html}{\out{<div class="sourceCode">}}\preformatted{https://<username>@repo-host/<repo-path>
https://repo-host/<repo-path>
https://<username>@repo-host
https://repo-host
}\if{html}{\out{</div>}}

To add an authenticated repository use \code{\link[=repo_add]{repo_add()}} with the \code{username}
argument. Alternatively, you can set the \code{repos} option directly using
\code{\link[base:options]{base::options()}} and including the username in the repository URL.

\code{repo_auth()} lists authentication information for all configured
repositories.
}
\seealso{
\link{Authenticated repositories}.
}
